<?xml version="1.0" encoding="UTF-8"?>

<!-- Ant is used instead of Maven or Gradle because both Maven and Gradle
     are hideously slow on older machines like a Mac PowerBook G4 or Sun
     Ultra 5. Ant is more than 2X faster and the Ant code is more than 2X
     simpler, shorter and easier to understand. The only thing that Maven
     would offer is dependency management. But there is only one dependency
     so Maven is just an annoying nuisance for this purpose.
     
     Also, Maven can't build a DMG that works on both old and new Macs.
     Ant is required for that.
     
     A Maven directory layout is maintained for consistency with other
     projects. -->

<!-- This DOCTYPE tag shuts off the warning from Eclipse that there is no DTD
     associated with this XML file. -->

<!DOCTYPE project>

<project name="rune" default="all" basedir=".">

    <property environment="env"/>
    <property name="version" value="1.0"/>
    <property name="build.dir" value="target"/>
    <property name="cls.dir" value="${build.dir}/classes"/>
    <property name="main.class" value="Rune"/>
    <property name="lib.dir" value="lib"/>
    <property name="jar" value="${build.dir}/rune.jar"/>
    <property name="app" value="${build.dir}/Rune.app"/>
    <property name="dmg" value="${build.dir}/Rune.dmg"/>
    <property name="zip" value="${build.dir}/Rune.zip"/>
    <property name="dmg.setup.dir" value="${build.dir}/Rune"/>
    <property name="font.install.script" value="${dmg.setup.dir}/Install Free Programming Fonts"/>
    <property name="izpack.root" value="${build.dir}/izpack"/>
    <property name="izpack.app.dir" value="appfiles"/>
    <!-- The location of this jar is very bad, but that is what izPack requires. -->
    <property name="listener.bin" value="bin"/>
    <property name="listener.dir" value="${listener.bin}/customActions"/>
    <property name="xdg.desktop.menu.jar" value="${listener.dir}/xdg-desktop-menu.jar"/>

    <!-- Allows us to use the IzPack Ant task, standalone-compiler.jar added to Ant lib -->
    <taskdef name="izpack"
             classpath="lib/izpack-standalone-compiler-4.3.5.jar"
             classname="com.izforge.izpack.ant.IzPackTask"/>

    <condition property="target.java.version" value="1.5" else="1.7">
        <or>
            <equals arg1="5" arg2="${java.specification.version}"/>
            <equals arg1="6" arg2="${java.specification.version}"/>
            <equals arg1="7" arg2="${java.specification.version}"/>
            <equals arg1="8" arg2="${java.specification.version}"/>
        </or>
    </condition>

    <condition property="mac">
        <os family="mac"/>
    </condition>

    <condition property="linux">
        <os name="linux"/>
    </condition>

    <condition property="windows">
        <os family="windows"/>
    </condition>

    <target name="clean" description="Deletes all build artifacts">
        <delete dir="${build.dir}" verbose="true"/>
        <delete dir="${listener.bin}" verbose="true"/>
    </target>

    <target name="compile-setup" description="Sets up for compile">
        <mkdir dir="${cls.dir}"/>
    </target>

    <target name="compile" depends="compile-setup" description="Compiles Java code">
        <javac srcdir="src/main/java"
               source="${target.java.version}"
               target="${target.java.version}"
               destdir="${cls.dir}"
               classpath="lib/izpack-standalone-compiler-4.3.5.jar"
               includeantruntime="false" />
    </target>

    <target name="jar-install-listener" depends="compile" description="Builds jar for custom install listener">
        <jar destfile="${xdg.desktop.menu.jar}">
            <fileset dir="${build.dir}/classes">
                <include name="com/alteredmechanism/izpack/**"/>
                <include name="com/alteredmechanism/rune/Executor.class"/>
            </fileset>
        </jar>
    </target>

    <target name="jar" depends="compile" description="Builds a fat jar, rune.jar">
        <jar destfile="${build.dir}/${ant.project.name}.jar">
            <fileset dir="${build.dir}/classes">
                <exclude name="com/alteredmechanism/izpack/**"/>
            </fileset>
            <fileset dir="src/main/resources" includes="icons/**" excludes="mac"/>
            <zipfileset src="lib/jlfgr-1_0.jar" excludes="META-INF/*.SF"/>
            <manifest>
                <attribute name="Main-Class" value="${main.class}"/>
            </manifest>
        </jar>
    </target>

    <target name="mac-app" depends="jar" description="Builds Rune.app directory structure">
        <delete dir="${app}" />
        <mkdir dir="${app}/Contents/MacOS" />
        <mkdir dir="${app}/Contents/Resources/Java" />
        <copy todir="${app}/Contents/MacOS" preservelastmodified="true" verbose="true">
            <fileset file="src/main/scripts/rune"/>
            <fileset file="src/main/scripts/rune-debug.sh"/>
            <fileset file="src/main/scripts/rune-common-functions.sh"/>
            <fileset file="src/main/scripts/rune-out-of-mem-err-handler.sh"/>
        </copy>
        <!-- Ant's 'copy' command drops permissions so, they need to be reset after each copy. -->
        <chmod perm="ugo+rx" verbose="true">
            <fileset file="${app}/Contents/MacOS/rune"/>
            <fileset file="${app}/Contents/MacOS/rune-debug.sh"/>
            <fileset file="${app}/Contents/MacOS/rune-out-of-mem-err-handler.sh"/>
            <fileset file="${app}/Contents/MacOS/install-fonts.sh"/>
        </chmod>
        <copy file="${jar}" tofile="${app}/Contents/Resources/Java/rune.jar" preservelastmodified="true"
              verbose="true"/>
        <copy todir="${app}/Contents/Resources" preservelastmodified="true" verbose="true">
            <fileset file="src/main/resources/icons/vegvisir.icns"/>
        </copy>
        <copy todir="${app}/Contents" preservelastmodified="true" verbose="true">
            <fileset dir="src/main/resources/mac">
                <include name="Info.plist"/>
                <include name="PkgInfo"/>
            </fileset>
        </copy>
    </target>

    <target name="mac-app-zip" depends="mac-app" description="Build a zip file containing the mac app">
        <echo message="A DMG is a Mac-only technology so building a Zip also" />
        <zip destfile="${zip}">
            <fileset file="${app}"/>
        </zip>
    </target>

    <target name="dmg-on-mac-setup" depends="mac-app" description="Setup for building a dmg on a Mac" if="mac">
        <mkdir dir="${dmg.setup.dir}"/>
        <copy todir="${dmg.setup.dir}">
            <fileset dir="${build.dir}" includes="Rune.app/**"/>
            <!-- <fileset file="src/main/resources/mac/Applications"/> -->
        </copy>
        <!-- Ant's 'copy' command drops permissions so, they need to be reset after each copy. -->
        <chmod perm="a+rx" verbose="true">
            <fileset file="${dmg.setup.dir}/Rune.app/Contents/MacOS/rune"/>
            <fileset file="${dmg.setup.dir}/Rune.app/Contents/MacOS/rune-debug.sh"/>
            <fileset file="${dmg.setup.dir}/Rune.app/Contents/MacOS/rune-out-of-mem-err-handler.sh"/>
            <fileset file="${dmg.setup.dir}/Rune.app/Contents/MacOS/install-fonts.sh"/>
        </chmod>
        <copy file="src/main/scripts/install-fonts.sh" tofile="${font.install.script}"/>
        <chmod file="${font.install.script}" perm="a+rx"/>
        <mkdir dir="${dmg.setup.dir}/Fonts"/>
        <copy todir="${dmg.setup.dir}/Fonts">
            <fileset dir="${basedir}/src/main/resources/fonts" includes="**"/>
        </copy>
    </target>

    <target name="dmg-on-mac" depends="dmg-on-mac-setup" description="Builds a dmg on a Mac" if="mac">
        <exec dir="${build.dir}" executable="hdiutil">
            <arg value="create"/>
            <arg value="-ov"/>
            <!-- Overwrite any existing file -->
            <arg value="-srcfolder"/>
            <arg value="Rune"/>
            <arg value="Rune.dmg"/>
        </exec>
        <!-- This should be "if mac os < catalina" -->
        <exec dir="${build.dir}" executable="hdiutil">
            <arg value="internet-enable"/>
            <arg value="-yes"/>
            <arg value="Rune.dmg"/>
        </exec>
    </target>

    <target name="dmg-on-linux" depends="mac-app" if="linux" description="Builds a dmg on a Lignix">
        <touch file="${dmg}" />
        <exec dir="${basedir}" executable="dd" failonerror="true">
            <arg value="if=/dev/zero"/>
            <arg value="of=${dmg}"/>
            <arg value="bs=1M"/>
            <arg value="count=10"/>
            <!-- Number of megabytes -->
            <arg value="status=progress"/>
        </exec>
        <exec dir="${basedir}" executable="mkfs.hfsplus" failonerror="true">
            <arg value="-v"/>
            <arg value="Rune"/>
            <arg value="${dmg}"/>
        </exec>
        <mkdir dir="target/dmg-mount"/>
        <exec dir="${basedir}" executable="sudo" failonerror="true">
            <arg value="mount"/>
            <arg value="--verbose"/>
            <arg value="-o"/>
            <arg value="loop"/>
            <arg value="${dmg}"/>
            <arg value="target/dmg-mount"/>
        </exec>
        <exec dir="${build.dir}" executable="sudo" failonerror="true">
            <arg value="chown"/>
            <arg value="-R"/>
            <arg value="${user.name}:${user.name}"/>
            <arg value="dmg-mount"/>
        </exec>
        <copy todir="${build.dir}/dmg-mount" verbose="true">
            <fileset dir="${build.dir}">
                <include name="Rune.app/**"/>
            </fileset>
        </copy>
        <exec dir="${build.dir}" executable="sudo" failonerror="true">
            <arg value="umount"/>
            <arg value="--verbose"/>
            <arg value="dmg-mount"/>
        </exec>
    </target>

    <target name="dmg" depends="dmg-on-mac,dmg-on-linux,mac-app-zip" description="Builds a dmg" />

    <target name="izpack-setup">
        <mkdir dir="${izpack.root}"/>
        <copy todir="${izpack.root}">
            <fileset dir="src/main/izpack" includes="**"/>
        </copy>

        <!-- Copy scripts into izpack deployment directory. -->
        <mkdir dir="${izpack.root}/${izpack.app.dir}/bin"/>
        <copy todir="${izpack.root}/${izpack.app.dir}/bin">
            <fileset dir="src/main/scripts">
                <include name="rune*"/> <!-- All files starting with rune -->
                <include name="rune-common-functions.sh"/>
                <include name="dtksh-dialog"/>
            </fileset>
        </copy>
        <mkdir dir="${izpack.root}/${izpack.app.dir}/lib"/>
        <copy tofile="${izpack.root}/${izpack.app.dir}/lib/rune.jar"
              file="${jar}"/>
        <mkdir dir="${izpack.root}/${izpack.app.dir}"/>
        <copy todir="${izpack.root}/${izpack.app.dir}">
            <fileset dir="${basedir}">
                <include name="README.md"/>
                <include name="LICENSE"/>
            </fileset>
        </copy>
        <mkdir dir="${izpack.root}/${izpack.app.dir}/share/icons"/>
        <copy todir="${izpack.root}/${izpack.app.dir}/share/icons">
            <fileset dir="src/main/resources/icons">
                <include name="vegvisir.png"/>
            </fileset>
        </copy>
    </target>

    <target name="izpack" depends="izpack-setup,jar-install-listener">
        <izpack input="src/main/izpack/install.xml"
                output="${build.dir}/rune-install.jar"
                installerType="standard"
                inheritAll="true"
                basedir="${izpack.root}"
                compression="deflate"
                compressionlevel="9"/>
    </target>

    <target name="all"  depends="dmg,izpack"/>

    <target name="test" depends="all">
        <java jar="${build.dir}/rune-install.jar" fork="true"/>
    </target>
</project>
