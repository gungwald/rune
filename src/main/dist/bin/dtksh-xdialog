#!/usr/dt/bin/dtksh 

function usage 
{ 
print "usage: $0 <toolkit options> <options> 
-O <label string>     - Label for the \`Ok' button 
-C <label string>     - Label for the \`Cancel' button 
-f <file name>        - Specify file to display 
-m <string>           - Specify message string to display 
-p <bitmap file>      - Specify bitmap image to display 
-e <command string>   - Execute command string if Ok seleted 
-t <title>            - Specify title of window 
-c                    - Make \`Cancel' button be default 
-o                    - Make \`Ok' button be default 
The -f and -m options are mutually exclusive." 
   exit 2 
}

default_button=o 
XtInitialize TOPLEVEL shell Dtksh_xdialog xdialog "$@" 
set -- "${DTKSH_ARGV[@]}" 
shift 
typeset -A options 
while [ $# -gt 0 ]; do 
    case "$1" in 
    -O*|-C*|-f*|-m*|-p*|-e*) 
        if [ ${#1} -gt 2 ]; then 
            options["${1:0:2}"]="${1:2}" 
            shift 
        else 
            if [ $# -lt 2 ]; then 
                usage 
            else 
                options["$1"]="$2" 
                shift 2 
            fi 
        fi 
        ;; 
    -c*|-o*) 
        default_button=${1:1:1} 
        show_cancel=yes 
        if [ ${#1} -gt 2 ]; then 
            new_1="-${1:2}" 
            shift 
            set -- "$new_1" "$@" 
        else 
            shift 
        fi 
        ;; 
    --) 
        shift 
        break 
        ;; 
    esac 
done 
ok_label="${options[-O]}" 
cancel_label="${options[-C]}" 
message_file="${options[-f]}" 
message="${options[-m]}" 
pixmap="${options[-p]}" 
command="${options[-e]}" 
if [ -n "$cancel_label" -o -n "$command" ]; then 
    show_cancel=yes 
fi 
if [ -n "$message_file" ]; then 
    if [ -n "$message" ]; then 
        usage 
    else 
        if [ -r $message_file ]; then 
            message="$(<$message_file)" 
        else 
            message="File $message_file not found." 
        fi 
    fi 
fi 
if [ -z "$message" ]; then 
    usage 
fi 
XtCreateManagedWidget FORM form XmForm $TOPLEVEL \
    marginHeight:15 \
    marginWidth:15 
XtCreateManagedWidget SEPARATOR separator XmSeparator $FORM \
    leftAttachment:ATTACH_FORM \
    rightAttachment:ATTACH_FORM \
    bottomAttachment:ATTACH_FORM \
    bottomOffset:70 
XtCreateManagedWidget LABEL label XmLabel $FORM \
    leftAttachment:ATTACH_FORM \
    rightAttachment:ATTACH_FORM \
    topAttachment:ATTACH_FORM \
    bottomAttachment:ATTACH_WIDGET \
    bottomWidget:$SEPARATOR \
    bottomOffset:16 \
    alignment:ALIGNMENT_BEGINNING \
    labelString:"$message" 
if [ -n "$pixmap" ]; then 
    XtCreateManagedWidget PIXMAP pixmap XmLabel $FORM \
        leftAttachment:ATTACH_FORM \
        topAttachment:ATTACH_FORM \
        bottomAttachment:ATTACH_WIDGET \
        bottomWidget:$SEPARATOR \
        bottomOffset:16 \
        labelType:PIXMAP \
        labelPixmap:"$pixmap" 
    XtSetValues $LABEL \
        leftAttachment:ATTACH_WIDGET \
        leftWidget:$PIXMAP \
        leftOffset:15 
fi 
XtCreateManagedWidget OK Ok XmPushButton $FORM \
    leftAttachment:ATTACH_FORM \
    rightAttachment:ATTACH_POSITION \
    rightPosition:50 \
    rightOffset:10 \
    bottomAttachment:ATTACH_FORM \
    labelString:"${ok_label:-OK}" \
    activateCallback:'if [ -n "$command" ]; then (eval "$command"&) fi; exit 0' 
if [ -n "$show_cancel" ]; then 
    XtCreateManagedWidget CANCEL Cancel XmPushButton $FORM \
        leftAttachment:ATTACH_POSITION \
        leftPosition:50 \
        leftOffset:10 \
        rightAttachment:ATTACH_FORM \
        bottomAttachment:ATTACH_FORM \
        labelString:"${cancel_label:-Cancel}" \
        activateCallback:"exit 1" 
fi 
case $default_button in 
    o) 
        XtSetValues $OK showAsDefault:3 
        if [ -n "$show_cancel" ]; then 
            XtSetValues $CANCEL bottomOffset:24 
        fi 
        ;; 
    c) 
        XtSetValues $CANCEL showAsDefault:3 
        XtSetValues $OK bottomOffset:24 
        ;; 
esac 
XtRealizeWidget $TOPLEVEL 
XtMainLoop

